name: Trivy Scan for Critical Vulnerabilities

on:
  workflow_dispatch:
    inputs:
      registries:
        description: "List of image registries to scan"
        required: true
        default: |
          - us-docker.pkg.dev/runwhen-nonprod-shared/public-images/robot-runtime-base-image:latest

jobs:
  trivy-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Trivy
        uses: aquasecurity/trivy-action@master
        with:
          version: '0.33.0' # Specify the Trivy version here

      - name: Parse registry list
        id: parse-registries
        run: |
          echo "${{ github.event.inputs.registries }}" | sed 's/- //g' > registries.txt
          echo "Parsed registries:"
          cat registries.txt
      
      - name: Scan each registry
        id: trivy-scan
        run: |
          while IFS= read -r registry; do
            echo "Scanning $registry..."
            critical_count=$(trivy image --severity CRITICAL --ignore-unfixed --format json "$registry" | jq '.Results[].Vulnerabilities | map(select(.Severity == "CRITICAL")) | length')
            echo "$registry: $critical_count Critical vulnerabilities" >> trivy_critical_metrics.txt
          done < registries.txt

      - name: Upload results
        uses: actions/upload-artifact@v3
        with:
          name: trivy_critical_metrics
          path: trivy_critical_metrics.txt

      - name: Display metrics
        run: |
          echo "Critical vulnerabilities count:"
          cat trivy_critical_metrics.txt
