{{- if .Values.runner.enabled -}}
apiVersion: v1
kind: ConfigMap
metadata: 
  name: otel-collector
  namespace: {{ .Release.Namespace }}
  labels:
    app: otel-collector
data: 
  relay: |
    extensions:
      health_check:
        endpoint: ${env:MY_POD_IP}:13133
    receivers:
      # otlp:
      #   protocols:
      #     grpc:
      #       endpoint: ${env:MY_POD_IP}:4317
      #     http:
      #       endpoint: ${env:MY_POD_IP}:4318
      prometheus:
        config:
          global:
            scrape_interval: 15s 
          scrape_configs:
            - job_name: prometheus.scrape.pushgw
              static_configs:
                - targets: 
                  - pushgateway:9091
              metric_relabel_configs:
                - source_labels: [__name__]
                  regex: ".*__.*"  # Only allow metrics with double underscores
                  action: keep     # Keep metrics with double underscores
                - source_labels: [__name__]
                  regex: ".*_.*"
                  action: keep     
            # - job_name: opentelemetry-collector
            #   static_configs:
            #     - targets:
            #         - ${env:MY_POD_IP}:8888
    exporters:
      debug:
        verbosity: detailed
      logging:
        verbosity: detailed
      prometheusremotewrite:
        endpoint: {{ .Values.runner.metrics.url }}
        {{- if .Values.proxy.enabled }}
        http_client_settings:
          {{- with .Values.proxy.httpsProxy }}
          proxy_url: "{{ . }}"
          {{- end }}
          {{- with .Values.proxy.noProxy }}
          no_proxy: "{{ . }}"
          {{- end }}
        {{- end }}
        tls:
          {{- if .Values.proxyCA }}
          ca_file: "/etc/ssl/certs/proxy-ca.crt"
          {{- else }}
          ca_file: "/tls/ca.crt"
          {{- end }}
          cert_file: "/tls/tls.crt"
          key_file: "/tls/tls.key"
          insecure_skip_verify: true
        external_labels:
            workspace: {{ include "runwhen-local.workspaceName" . }}

    processors:
      batch:
    service:
      pipelines:
        metrics:
          receivers: [prometheus]
          processors: [batch]
          exporters: [prometheusremotewrite, debug]
      extensions:
        - health_check
      telemetry:
        logs:
          level: debug
        # metrics:
        #   address: ${env:MY_POD_IP}:8888

{{- end }}
