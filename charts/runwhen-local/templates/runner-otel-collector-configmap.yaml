{{- if .Values.runner.enabled -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector
  namespace: {{ .Release.Namespace }}
  labels:
    app: otel-collector
data:
  relay: |
    extensions:
      health_check:
        endpoint: ${env:MY_POD_IP}:13133

    receivers:
      otlp:
        protocols:
          http: 
            endpoint: ${env:MY_POD_IP}:4318
          grpc:
            endpoint: ${env:MY_POD_IP}:4317

      prometheus:
        config:
          scrape_configs:
            - job_name: 'runwhen-runtime-metrics'
              kubernetes_sd_configs:
                - role: pod
                  namespaces:
                    names:
                      - {{ .Release.Namespace }}
              scrape_interval: 15s
              scrape_timeout: 10s
              metrics_path: /metrics
              scheme: http
              # Set port to 9090
              port: 9090
              # Relabel configs to filter and label
              relabel_configs:
                # Only scrape pods with type=runner-worker label
                - source_labels: [__meta_kubernetes_pod_label_type]
                  regex: runner-worker
                  action: keep
                # Hardcode port to 9090
                - source_labels: [__meta_kubernetes_pod_ip]
                  target_label: __address__
                  action: replace
                  regex: (.+)
                  replacement: '${1}:9090'
                # Set instance label to pod name
                - source_labels: [__meta_kubernetes_pod_name]
                  target_label: instance
                # Set service label
                - source_labels: []
                  target_label: service
                  replacement: 'runwhen-runtime'

    exporters:
      prometheusremotewrite:
        endpoint: {{ .Values.runner.metrics.url }}
        {{- if .Values.proxy.enabled }}
        http_client_settings:
          {{- with .Values.proxy.httpsProxy }}
          proxy_url: "{{ . }}"
          {{- end }}
          {{- with .Values.proxy.noProxy }}
          no_proxy: "{{ . }}"
          {{- end }}
        {{- end }}
        tls:
          {{- if .Values.proxyCA }}
          ca_file: "/etc/ssl/certs/proxy-ca.crt"
          {{- else }}
          ca_file: "/tls/ca.crt"
          {{- end }}
          cert_file: "/tls/tls.crt"
          key_file: "/tls/tls.key"
          insecure_skip_verify: true
        external_labels:
          workspace: {{ include "runwhen-local.workspaceName" . }}

    processors:
      batch:
        timeout: 10s
        send_batch_size: 1024
        send_batch_max_size: 2048

      # Add resource processor to enrich metrics with additional labels
      resource:
        attributes:
          - key: k8s.cluster.name
            value: {{ if .Values.cluster }}{{ .Values.cluster.name | default "unknown" }}{{ else }}unknown{{ end }}
            action: upsert
          - key: k8s.namespace.name
            value: {{ .Release.Namespace }}
            action: upsert
          - key: deployment.environment
            value: {{ .Values.environment | default "production" }}
            action: upsert

    service:
      pipelines:
        # Existing OTLP pipeline (unchanged)
        metrics/otlp:
          receivers: [otlp]
          processors: [batch, resource]
          exporters: [prometheusremotewrite]

        # New Prometheus scraping pipeline for runtime metrics
        metrics/prometheus:
          receivers: [prometheus]
          processors: [batch, resource]
          exporters: [prometheusremotewrite]

      extensions:
        - health_check

      telemetry:
        logs:
          level: debug

{{- end }} 