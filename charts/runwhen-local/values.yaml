# RunWhen Local is intended to run with a single replica, as multiple instances
# will continue to perform discovery against your clusters
replicaCount: 1

image:
  repository: ghcr.io/runwhen-contrib/runwhen-local
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""


serviceAccountRoles:
  namespaceRole:
    enabled: false
    namespaces: []
    rules:
    - apiGroups: [""]
      resources: ["*"]
      verbs: ["get", "watch", "list"]
  clusterRoleView:
    enabled: true
  advancedClusterRole:
    enabled: false
    rules: []
    # - apiGroups: [""]
    #   resources: ["pods", "pods/log", "events", "configmaps", "services", "replicationcontrollers"]
    #   verbs: ["get", "watch", "list"]
    # - apiGroups: ["batch"]
    #   resources: ["*"]
    #   verbs: ["get", "watch", "list"]


podAnnotations: {}


service:
  type: ClusterIP
  port: 8081

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  requests:
    memory: "256Mi"
    cpu: "250m"
  limits:
    memory: "1024Mi"
    cpu: "1"

nodeSelector: {}

tolerations: []

affinity: {}

# RunWhen Local requires a kubeconfig to discover resouces from 1 or more
# clusters.
#
# Using inClusterAuth works for the local cluster only.
# If discoverying multiple clusters, set inClusterAuth.enabled=false
# and mount a secret with a kubeconfig that contains all
# cluster contexts to be discovered

discoveryKubeconfig:
  inClusterAuth:
    enabled: true
  secretProvided:
    enabled: false
    # secretName: runwhen-local-kubeconfig
    # secretKey: kubeconfig
    # secretPath: kubeconfig

### RunWhen Local Runtime Configuration
# autoRun: start discovery on deployment, and re-run discovery evey discoveryInterval seconds
# also supports upload configuration for continuous updates of RunWhen Platform Workspace
# upload is disabled by default; requires a valid uploadInfo.yaml
autoRun:
  discoveryInterval: 14400                 # seconds to wait until a new discovery
  uploadEnabled: false                     # upload configuration to RunWhen Platform
  uploadMergeMode: "keep-uploaded"         # 'keep-uploaded' or 'keep-existing'


# terminal: Enable or disable the in-browser terminal (unauthentication connection to container shell)
terminal:
  disabled: true

###### Upload configuration
# The upload configuration applies only to users to leverage RunWhen Local as an
# onboarding tool into RunWhen Platform (https://www.runwhen.com for more details)
# When uploading discovered resources and configuration information to RunWhen Platform,
# workspaceName, token, workspaceOwnerEmail, defaultLocation and papiURL are mandtatory
# can can be obtained immediately after creating a RunWhen Platform workspace.

###### workspaceInfo
# Currently this holds details such as custom variables & upload configuration
# Note: This section will soon be split into two separate configuration files
# See https://docs.runwhen.com/public/v/runwhen-local/user-guide/user_guide-advanced_configuration/workspaceinfo-customization
###### Custom Variables
# Custom variables are used to help tailor the generated content when we can't
# automatically infer from the discovered resources (such as specifying a prometheus
# provider, cloud provider, or kubernetes distribution & binary (mostly for oc vs
# kubectl users))

workspaceName: undefined

runwhenLocalConfig:
  useExistingConfigMap: false
  existingConfigMapName: ""
  configMap:
    create: true
    name: runwhen-configmap
    data:
      uploadInfo.yaml: |
        # workspaceName: undefined
        # token: undefined
        # workspaceOwnerEmail: tester@my-company.com
        # papiURL: undefined
        # defaultLocation: undefined
      workspaceInfo.yaml: |
        # Information about the RunWhen workspace
        defaultLocation: undefined
        workspaceName: my-workspace
        workspaceOwnerEmail: tester@my-company.com
        # More workspace config
        # Information about cloud platforms to scan to discover resources
        defaultLOD: 2
        cloudConfig:
          kubernetes:
            # kubeconfigFile: /shared/kubeconfig
            namespaceLODs:
              kube-system: 0
              kube-public: 0
              kube-node-lease: 0
        custom: []

runner:
  enabled: false
  image: "us-docker.pkg.dev/runwhen-nonprod-shared/public-images/runner:test"
  controlAddr: "https://runner.test.runwhen.com"
  metrics:
    url: "https://runner-cortex-tenant.test.runwhen.com/push"

grafana-agent:
  agent:
    mode: 'flow'
    configMap:
      create: false
      name: grafana-agent
      key: config.river
    mounts:
      extra:
        - name: tls-secret-volume
          mountPath: /tls
          readOnly: true
  controller:
    type: deployment
    volumes:
      extra:
        - name: tls-secret-volume
          secret:
            secretName: runner-metrics-tls
